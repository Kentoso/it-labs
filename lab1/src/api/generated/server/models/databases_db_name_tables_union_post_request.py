from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model import Model
from server import util


class DatabasesDbNameTablesUnionPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, table1=None, table2=None):  # noqa: E501
        """DatabasesDbNameTablesUnionPostRequest - a model defined in OpenAPI

        :param table1: The table1 of this DatabasesDbNameTablesUnionPostRequest.  # noqa: E501
        :type table1: str
        :param table2: The table2 of this DatabasesDbNameTablesUnionPostRequest.  # noqa: E501
        :type table2: str
        """
        self.openapi_types = {
            'table1': str,
            'table2': str
        }

        self.attribute_map = {
            'table1': 'table1',
            'table2': 'table2'
        }

        self._table1 = table1
        self._table2 = table2

    @classmethod
    def from_dict(cls, dikt) -> 'DatabasesDbNameTablesUnionPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _databases__db_name__tables_union_post_request of this DatabasesDbNameTablesUnionPostRequest.  # noqa: E501
        :rtype: DatabasesDbNameTablesUnionPostRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def table1(self) -> str:
        """Gets the table1 of this DatabasesDbNameTablesUnionPostRequest.

        Name of the first table  # noqa: E501

        :return: The table1 of this DatabasesDbNameTablesUnionPostRequest.
        :rtype: str
        """
        return self._table1

    @table1.setter
    def table1(self, table1: str):
        """Sets the table1 of this DatabasesDbNameTablesUnionPostRequest.

        Name of the first table  # noqa: E501

        :param table1: The table1 of this DatabasesDbNameTablesUnionPostRequest.
        :type table1: str
        """

        self._table1 = table1

    @property
    def table2(self) -> str:
        """Gets the table2 of this DatabasesDbNameTablesUnionPostRequest.

        Name of the second table  # noqa: E501

        :return: The table2 of this DatabasesDbNameTablesUnionPostRequest.
        :rtype: str
        """
        return self._table2

    @table2.setter
    def table2(self, table2: str):
        """Sets the table2 of this DatabasesDbNameTablesUnionPostRequest.

        Name of the second table  # noqa: E501

        :param table2: The table2 of this DatabasesDbNameTablesUnionPostRequest.
        :type table2: str
        """

        self._table2 = table2
