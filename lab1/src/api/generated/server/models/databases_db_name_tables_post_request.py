from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model import Model
from server import util


class DatabasesDbNameTablesPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, table_name=None, _schema=None):  # noqa: E501
        """DatabasesDbNameTablesPostRequest - a model defined in OpenAPI

        :param table_name: The table_name of this DatabasesDbNameTablesPostRequest.  # noqa: E501
        :type table_name: str
        :param _schema: The _schema of this DatabasesDbNameTablesPostRequest.  # noqa: E501
        :type _schema: Dict[str, str]
        """
        self.openapi_types = {
            'table_name': str,
            '_schema': Dict[str, str]
        }

        self.attribute_map = {
            'table_name': 'table_name',
            '_schema': 'schema'
        }

        self._table_name = table_name
        self.__schema = _schema

    @classmethod
    def from_dict(cls, dikt) -> 'DatabasesDbNameTablesPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _databases__db_name__tables_post_request of this DatabasesDbNameTablesPostRequest.  # noqa: E501
        :rtype: DatabasesDbNameTablesPostRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def table_name(self) -> str:
        """Gets the table_name of this DatabasesDbNameTablesPostRequest.

        Name of the table to create  # noqa: E501

        :return: The table_name of this DatabasesDbNameTablesPostRequest.
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name: str):
        """Sets the table_name of this DatabasesDbNameTablesPostRequest.

        Name of the table to create  # noqa: E501

        :param table_name: The table_name of this DatabasesDbNameTablesPostRequest.
        :type table_name: str
        """

        self._table_name = table_name

    @property
    def _schema(self) -> Dict[str, str]:
        """Gets the _schema of this DatabasesDbNameTablesPostRequest.


        :return: The _schema of this DatabasesDbNameTablesPostRequest.
        :rtype: Dict[str, str]
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema: Dict[str, str]):
        """Sets the _schema of this DatabasesDbNameTablesPostRequest.


        :param _schema: The _schema of this DatabasesDbNameTablesPostRequest.
        :type _schema: Dict[str, str]
        """

        self.__schema = _schema
