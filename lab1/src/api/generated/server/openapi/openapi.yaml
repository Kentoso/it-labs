openapi: 3.0.0
info:
  title: Simple DBMS API
  version: 1.0.0
servers:
- url: http://localhost:5000
paths:
  /databases:
    post:
      operationId: create_database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseCreate'
        required: true
        x-body-name: database_create
      responses:
        "200":
          description: Database created successfully
        "400":
          description: Database already exists
      summary: Create a new database
      tags:
      - Databases
      x-openapi-router-controller: server.controllers.databases_controller
  /databases/{db_name}:
    delete:
      operationId: delete_database
      parameters:
      - explode: false
        in: path
        name: db_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Database deleted successfully
        "404":
          description: Database not found
      summary: Delete a database
      tags:
      - Databases
      x-openapi-router-controller: server.controllers.databases_controller
  /databases/{db_name}/tables:
    get:
      operationId: list_tables
      parameters:
      - explode: false
        in: path
        name: db_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: A list of tables in the database
        "404":
          description: Database not found
      summary: List all tables in a database
      tags:
      - Tables
      x-openapi-router-controller: server.controllers.tables_controller
    post:
      operationId: create_table
      parameters:
      - explode: false
        in: path
        name: db_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableCreate'
        required: true
        x-body-name: table_create
      responses:
        "200":
          description: Table created successfully
        "400":
          description: Invalid schema or table already exists
      summary: Create a new table in a database
      tags:
      - Tables
      x-openapi-router-controller: server.controllers.tables_controller
  /databases/{db_name}/tables/union:
    post:
      operationId: perform_table_union
      parameters:
      - explode: false
        in: path
        name: db_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableUnion'
        required: true
        x-body-name: table_union
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
          description: Union performed successfully
        "400":
          description: Tables not found or schemas do not match
      summary: Perform a union operation between two tables
      tags:
      - Tables
      x-openapi-router-controller: server.controllers.tables_controller
  /databases/{db_name}/tables/{table_name}:
    delete:
      operationId: delete_table
      parameters:
      - explode: false
        in: path
        name: db_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: table_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Table deleted successfully
        "400":
          description: Table not found
      summary: Delete a table
      tags:
      - Tables
      x-openapi-router-controller: server.controllers.tables_controller
  /databases/{db_name}/tables/{table_name}/rows:
    delete:
      operationId: delete_rows
      parameters:
      - explode: false
        in: path
        name: db_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: table_name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: condition
        required: true
        schema:
          description: "Condition to match rows to delete (e.g., \"id=5\")"
          type: string
        style: form
      responses:
        "200":
          description: Rows deleted successfully
        "400":
          description: Invalid condition or table not found
      summary: Delete rows from a table
      tags:
      - Rows
      x-openapi-router-controller: server.controllers.rows_controller
    get:
      operationId: select_rows
      parameters:
      - explode: false
        in: path
        name: db_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: table_name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: columns
        required: false
        schema:
          description: Comma-separated list of columns to select
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
          description: Rows selected successfully
        "404":
          description: Database or table not found
      summary: Select rows from a table
      tags:
      - Rows
      x-openapi-router-controller: server.controllers.rows_controller
    post:
      operationId: insert_row
      parameters:
      - explode: false
        in: path
        name: db_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: table_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowInsert'
        required: true
        x-body-name: row_insert
      responses:
        "200":
          description: Row inserted successfully
        "400":
          description: Invalid row or table not found
      summary: Insert a row into a table
      tags:
      - Rows
      x-openapi-router-controller: server.controllers.rows_controller
    put:
      operationId: update_rows
      parameters:
      - explode: false
        in: path
        name: db_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: table_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowUpdate'
        required: true
        x-body-name: row_update
      responses:
        "200":
          description: Rows updated successfully
        "400":
          description: Invalid condition or table not found
      summary: Update rows in a table
      tags:
      - Rows
      x-openapi-router-controller: server.controllers.rows_controller
  /databases/{db_name}/tables/{table_name}/schema:
    get:
      operationId: get_table_schema
      parameters:
      - explode: false
        in: path
        name: db_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: table_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Schema retrieved successfully
        "404":
          description: Database or table not found
      summary: Get the schema of a table
      tags:
      - Tables
      x-openapi-router-controller: server.controllers.tables_controller
components:
  schemas:
    DatabaseCreate:
      example:
        name: name
      properties:
        name:
          description: Name of the database to create
          title: name
          type: string
      title: DatabaseCreate
      type: object
    TableCreate:
      example:
        schema: "{}"
        table_name: table_name
      properties:
        table_name:
          description: Name of the table to create
          title: table_name
          type: string
        schema:
          title: schema
          type: object
      title: TableCreate
      type: object
    RowInsert:
      type: object
    RowUpdate:
      example:
        condition: "{}"
        new_values: "{}"
      properties:
        condition:
          title: condition
          type: object
        new_values:
          title: new_values
          type: object
      title: RowUpdate
      type: object
    TableUnion:
      example:
        table2: table2
        table1: table1
      properties:
        table1:
          description: Name of the first table
          title: table1
          type: string
        table2:
          description: Name of the second table
          title: table2
          type: string
      title: TableUnion
      type: object
